version: "3"
services:

  discovery:
    build: ../discovery
    restart: always
#    ports:
#      - "8761:8761"

#  config:
#    build: ../config
#    restart: always
##    ports:
##      - "8888:8888"
#
#  gateway:
#    build: ../gateway
#    restart: always
#    ports:
#      - "9090:9090"
#
#  credit:
#    build: ../../business/credit
#    restart: always
#    depends_on:
#      - discovery
#      - config
#
  rate:
    build: ../../business/rate
    restart: always
    depends_on:
      - discovery
#      - config
#
#  overdue:
#    build: ../../business/overdue
#    restart: always
#
#  keycloak:
#    image: quay.io/keycloak/keycloak:19.0.2
#    ports:
#      - '8080:8080'
#    environment:
#      - KEYCLOAK_ADMIN=admin
#      - KEYCLOAK_ADMIN_PASSWORD=admin
#    command:
#      - start-dev
#
#
#  postgres:
#    image: postgres:14.4-alpine
#    environment:
#      POSTGRES_DB: "credit_db"
#      POSTGRES_USER: "pguser"
#      POSTGRES_PASSWORD: "pass9"
#      PGDATA: "/var/lib/postgresql/data/pgdata"
#    ports:
#      - "5432:5432"
#    volumes:
#      - "../sql/init.sql:/docker-entrypoint-initdb.d/init.sql"
#
#
#  zookeeper:
#    image: zookeeper:3.7.0
#    container_name: zookeeper
#    restart: "no"
#    #    networks:
#    #      - kafka-net
#    ports:
#      - "2181:2181"
#
#  kafka:
#    image: obsidiandynamics/kafka
#    container_name: kafka
#    restart: "no"
#    #    networks:
#    #      - kafka-net
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
#      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
#      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#      KAFKA_BROKER_ID: 1
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    depends_on:
#      - zookeeper
#
#  kafdrop:
#    image: obsidiandynamics/kafdrop
#    container_name: kafdrop
#    restart: "no"
#    #    networks:
#    #      - kafka-net
#    ports:
#      - "9000:9000"
#    environment:
#      KAFKA_BROKERCONNECT: "kafka:29092"
#    depends_on:
#      - "kafka"
